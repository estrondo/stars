play.application.loader = stars.webapi.impl.infra.ApplicationLoader
play.http.secret.key = ${?APPLICATION_SECRET}

db.default {
  driver = org.postgresql.Driver
  url = ${DB_DEFAULT_URL}
  username = ${DB_DEFAULT_USERNAME}
  password = ${DB_DEFAULT_PASSWORD}
}

jdbc-defaults.slick.profile = "slick.jdbc.PostgresProfile$"

stars.webapi {
  timeout = 5s
  timeout = ${?STARS_WEBAPI_TIMEOUT}
}

akka.actor.serialization-bindings {
  "stars.webapi.impl.simulator.Command$New" = jackson-cbor
  "stars.webapi.impl.simulator.Event$New" = jackson-cbor
}

akka {
  discovery {
    method = aggregate

    aggregate {
      discovery-methods: ["config", "akka-dns"]
    }

    config.services {
      kafka-producer {
        endpoints = [
          {
            host = ${KAFKA_PRODUCER_HOST}
            port = ${KAFKA_PRODUCER_PORT}
          }
        ]
      }

      kafka-consumer {
        endpoints = [
          {
            host = ${KAFKA_CONSUMER_HOST}
            port = ${KAFKA_CONSUMER_PORT}
          }
        ]
      }
    }
  }
}

lagom.broker.kafka.client.producer: ${akka.kafka.producer} {
  service-name: kafka-producer
}

akka.management.cluster.bootstrap {

  contact-point-discovery {
    discovery-method = akka-dns
    service-name = stars-simulation-webapi
    service-name = ${?AKKA_CLUSTER_SERVICE_NAME}
    required-contact-point-nr = 1
  }
}